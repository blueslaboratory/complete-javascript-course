24/02/2025

Vamos a utilizar Google Chrome

CTRL + SHIFT + J: Abre Herramientas Avanzadas
CTRL + SHIFT + I: MÃ¡s Herramientas --> Herramientas para Desarrolladores

JavaScript is a: high-level, object-oriented, multi-paradigm programming language

HTML: nouns 
CSS: adjectives 
JS: verbs

Este curso va sobre Front-end applications, no vamos a ver Node.js (backend)
ES6: ECMAScript6 --> JS6

camelCase is the standard

JavaScript has dynamic typing: 
We do not have to manually define the data type of
the value stored in a variable. Instead, data types are determined automatically

Comments VSCode: CTRL+K, CTRL+C
Uncomment VSCode: CTRL+K, CTRL+U
Keyboard shortcuts VSCode: CTRL+K, CTRL+S



25/02/2025

Operator Precedence:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_precedence

Avoid using the loose equality operator == as much as you can



26/02/2025
By default always use const

Strict Mode:
- 'use strict';
- it has to be at the beginning of the code
- forbids us to do certain things 
- creates visible errors

Arrow Functions are only available in ECMAScript 6 - 2015



27/02/2025

55. Setting up Prettier and VS Code

Install: Prettier - Code Formatter (@ext:esbenp.prettier-vscode) (I AM NOT GOING TO USE PRETTIER)
Snippets: File -> Preferences -> Configure Snippets -> New Global Snippets File

Extension: TODO Highlight: NEW, FIXME, IMPORTANT, BUG, TODO
File --> Preferences --> Settings: Open Settings (JSON)

Extension: Live Server


58. How to Think Like a Developer: Become a Problem Solver!

Step 1:
Make sure you 100% understand the problem. Ask the right questions, get a clear view of the problem
Step 2:
Divide an conquer: break big problems into smaller sub-problems
Step 3:
Don't be afraid to do as much research as you have to
Step 4:
For big problems: Write pseudo-code before writing the actual code


60. Debugging (Fixing Errors)
Shows how to use the browser debugger --> 8:00
CTRL + SHIFT + J
save word:
debugger;


66. Basic HTML Structure and Elements
Extension: Auto Rename Tag & Auto Close Tag


67. Attributes, Classes and IDs
CSS - kebab case or dash case is the convention: course-image



28/02/2025

82. Working With Classes
When you work with lots of properties, aggregate them to a CSS class and then show/remove them with:
class = document.querySelector('.class-selector');
class.classList.remove('name-of-the-CSS-class');



03/03/2025

84. PROJECT #3: Pig Game
Flowchart diagrams --> diagrams.net



06/03/2025

// var defines the firstName as a window object: another reason not to use var
var firstName = 'Matilda;'



10/03/2025
106. Destructuring Arrays
Destructuring: receive 2 return values from a function:

WARNING: The spread operator (...) was introduced in ES6 (2015)


115. Looping Arrays: The for-of Loop
WARNING: The for-of loop was introduced in ES6



11/03/2025
128. Working With Strings - Part 3
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String

Converting a number into a string:
const str = number + '';
const str = String();



12/03/2025
135. First-Class and Higher-Order Functions

First class Functions:
- JS treats functions as first-class citizens:
     --> They can be assigned to variables
     --> Be passed as arguments to other functions
     --> Be returned from other functions
     --> Be stored in arrays or objects
- This means that functions are simply values, just like numbers, strings or objects
- Functions are just another "type" of object

Higher-order functions:
- A function that receives another function as an argument, that returns a new function, or both
- This is only possible because of first-class functions


136. Functions Accepting Callback Functions
Important lecture because JS uses Callback functions all the time



13/03/2025
INTERESTING:
138. The call and apply Methods
139. The bind Method
142. Closure



20/03/2025
151. PROJECT: "Bankist" App
Starts here, seems interesting but too time consuming: JUMPED (for now)